 REGISTRARSE en PC

git config --global user.name "<nombre para identificarse>"
git config --global user.email "<un correo>"
git config --global --list  --> ver nuestros datos

VER datos
git config --global --list


LIMPIAR PANTALLA
	clear
INICIAR REPOSITORIO LOCAL GIT
	git init

BAJAR REPOSITORIO de GITHUB  al directorio actual (Ejemplo)
	cd Desktop
	git clone <url>  --> automaticamente crea una carpeta con el nombre del repositorio


HACEN CAMBIOS en el archivo
GUARDARLOS 
	git add .   O git add -A  --> los dos hacen lo mismo
	git commit -m "<comentario>"

VER ESTADO DEL TRABAJO
	git status

VER LOS COMMITS REALIZADOS
	git log --> para salir de la vista ingresar ":q"
	git lod --> ver los commits solo nombres

SUBIR REPOSITORIO LOCAL A GITHUB REPOSITORIO REMOTO
	git remote add origin <url>
	git push -u origin master

SUBIR CAMBIOS A GITHUB 
	git push origin master --> si da error primero BAJAR CAMBIOS / ACTUALIZAR


BAJAR CAMBIOS HECHOS POR OTRA PERSONA / ACTUALIZAR
	git fetch origin
	git merge origin/master   --> para salir de la vista ingresar ":q"



REGRESAR AL COMMIT ANTERIOR
	git reset --hard HEAD~1 --> Borrar los commits posteriores -->alt+4(numeral de arriba)=~ 
	git reset --soft HEAD~1 --> Regresa un commit anterior pero los commits posteriores siguen 
				    en la rama intactos y aparacen como listos para hacer commit


**********************************************************************
**********************************************************************
**********************************************************************
RAMAS
ver las ramas exitentes
	git branch
	git branch --all --> ver todas las ramas incluso ocultas

	git branch -r --> solo ramas remotas
	git branch -a --> todas las ramas
	git branch -vv --> todas ramas asociadas
	git fetch origin nombreramaRemota:Ramalocal --> baja la rama remota con sus cambios y los copia a una rama local no asociada

crear nueva rama y despues moverse
	git branch <nombre nueva rama>     --> crear una rama nueva
	git checkout <nombre nueva rama>   --> moverse a la nueva rama

crear nueva rama(rama2)  y moverse de un solo
	git chechout -b <name new branch>


**************************SIRVE para hacer prueba en el proyecto y posteriormente subirlos a GITHUB
----se hacen cambios en nueva rama(rama2)
	git add.
	git commit -m "comentario"


Los cambios que se hagan en la nueva rama (rama2) no afectan a las otras ramas (master)
Si los cambios hechos son sastifactorios moverlos a la rama(master) para subirlos despues
Sino seguir modificando o borrar la nueva rama (rama2)



Mover los cambios de la nueva rama(rama2) a otra rama (master)

Moverse primero a la otra rama (master) que va a absorber a "rama2"  y despues mover los cambios
	git checkout master
	git merge rama2     

--> ahora rama "master" tiene los cambios de la "rama2"
--> y posteriormente subirlos a GITHUB 
	
	
****BORRAR RAMA
	git checkout master    				--> moverse a la rama principal
	git branch -D <nombre de la rama a eliminar>	--> borrar la rama nueva

******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 BORRAR CREDENCIALES DE CONSOLA	
	https://codeday.me/es/qa/20190414/495405.html
git credential-manager delete https://github.com

******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
https://forum.vuejs.org/t/how-to-iterate-thorough-a-vue-data-inside-mounted/19347

var calendario = new Vue({
	components: {
		vueCal: vuecal
	},
	el: "#app",
	data: {
		selectedEvent: {},
		showDialog: false,
		events: []
	},
	mounted() {
		this.cargar();
	},
	methods: {
		onEventClick(event, e) {
			this.selectedEvent = event
			this.showDialog = true
			console.log("hola -> " + this.selectedEvent.title + " -<>- " + this.selectedEvent.recordatorio);
			$("#modalEditar").modal("show");
			// Prevent navigating to narrower view (default vue-cal behavior).
			e.stopPropagation()
		},
		//obtener datos de la base 
		cargar() {
			axios.get("http://localhost/Calendario/index.php/calendario/get")
				.then(function (response) {
					// handle success
					console.log(response);
					console.log(response.data);
					var Eventos = [];
					response.data.forEach(element => {
						var tipo = "";
						var tipoR = element.tipoRecordatorio;
						switch (tipoR) {
							case "1":
								tipo = "danger";
								break;
							case "2":
								tipo = "warning";
								break;
							case "3":
								tipo = "primary";
								break;
						}
						//console.log(element.nombreEvento);
						//console.log(element.fechaEvento);
						//console.log(element.fechaFinEvento);
						//console.log(tipo);
						var tipoA = {
							start: element.fechaEvento,
							end: element.fechaFinEvento,
							title: element.nombreEvento,
							class: tipo,
							recordatorio: element.fechaRecordatorio
						}
						Eventos.push(tipoA);
						//console.log(tipoA);						
						/**
						 * start: "2019-10-24 11:30",
						end: "2019-10-24 12:30",
						title: "Salir",
						content: '<i class="v-icon material-icons">shopping_cart</i>',
						class: "leisure"
						 */
					});
					console.log(Eventos);


					this.events.push({
						start: '2019-11-02 03:00',
						end: '2019-11-02 04:00',
						title: 'estatico1',
						class: 'primary'
					});

					//this.events = Eventos;
					console.log("Agregados");
				})
				.catch(function (error) {
					// handle error
					console.log(error.response);
					//console.log(error.response.data);
				});;
		}
	}
});

var entrada = new Vue({
	el: "#entrada",
	data: {
		Tarea: {
			valor: "",
			clase: "",
			mjs: ""
		},
		Fechai: {
			valor: "",
			clase: "",
			mjs: ""
		},
		Horai: {
			valor: "",
			clase: "",
			min: "00:00",
			max: "23:58",
			mjs: ""
		},
		HoraF: {
			valor: "",
			clase: "",
			editar: true,
			min: "",
			max: "23:59"
		},
		Recordar: {
			valor: 1,
			clase: "",
			tipo: 3,
			ver: true,
			c1: false,
			dado: 3,
			mjs: ""
		},
		addT: "AÃ±adir",
		correcto: false,
		Matter: false
	},
	methods: {
		//Poner la Hora Final
		verHoraF() {
			if (this.HoraF.editar) {
				this.HoraF.editar = false;
				this.HoraF.min = this.Horai.valor;
			} else {
				this.HoraF.editar = true;
				this.HoraF.min = "";
				this.HoraF.valor = "";
				this.HoraF.clase = "";
			}
		},
		//Ver para Recordatorio
		verRecordar() {
			if (this.Recordar.ver) {
				this.Recordar.ver = false;
				if (this.Recordar.dado == 3) {
					this.Recordar.c1 = true;
					this.Recordar.tipo = 2;
					this.Recordar.dado = 2;
				} else {
					this.Recordar.tipo = this.Recordar.dado;
				}
			} else {
				this.Recordar.ver = true;
				this.Recordar.tipo = 3;
			}
		},
		//Tipo Recordatorio
		tipoRecordar(tipo) {
			this.Recordar.dado = tipo;
			this.Recordar.tipo = this.Recordar.dado;
		},

		//	VALIDAR TAREA
		validar() {
			this.Tarea.clase = this.Tarea.valor == "" ? "is-invalid" : "";
			//validar fecha
			this.Fechai.clase = this.Fechai.valor == "" ? "is-invalid" : "";

			//Validar hora inicial
			this.Horai.clase = this.Horai.valor == "" ? "is-invalid" : "";
			if (this.Horai.valor != "") {
				if (
					this.Horai.valor < this.Horai.min ||
					this.Horai.valor > this.Horai.max
				) {
					this.Horai.mjs =
						"La hora debe ser mayor a " +
						this.Horai.min +
						" y menor a " +
						this.Horai.max;
					this.Horai.clase = "is-invalid";
					this.correcto = false;
				} else {
					this.Horai.mjs = "";
					this.Horai.clase = "";
					this.correcto = true;
				}
			}
			//Validar hora final
			if (this.Horai.valor == "" && this.HoraF.editar == false) {
				this.HoraF.clase = "is-invalid";
				this.HoraF.mjs = "Ingrese primero la fecha de inicio";
				this.correcto = false;
			} else if (this.Horai.valor != "" && this.HoraF.editar == false) {
				if (
					this.Horai.valor < this.Horai.min ||
					this.Horai.valor > this.Horai.max
				) {
					this.HoraF.clase = "is-invalid";
					this.HoraF.mjs = "Verifique la Hora de Inicio";
				} else {
					if (this.HoraF.valor != "") {
						this.HoraF.min = this.Horai.valor;
						if (
							this.HoraF.valor < this.HoraF.min ||
							this.HoraF.valor > this.HoraF.max
						) {
							this.HoraF.mjs =
								"La hora debe ser mayor a " +
								this.HoraF.min +
								" y menor a " +
								this.HoraF.max;
							this.HoraF.clase = "is-invalid";
							this.correcto = false;
						} else {
							this.HoraF.mjs = "";
							this.HoraF.clase = "";
							this.correcto = true;
						}
					} else {
						this.HoraF.clase = "is-invalid";
						this.HoraF.mjs = "";
						this.correcto = false;
					}
				}
			} else {
				this.HoraF.mjs = "";
				this.HoraF.clase = "";
			}
			//Validar Recordatorio
			if (!this.Recordar.ver) {
				if (this.Fechai.valor != "") {
					//------------
					if (this.Recordar.valor > 0) {
						//validar HORA Inicio
						if (
							this.Horai.valor < this.Horai.min ||
							this.Horai.valor > this.Horai.max
						) {
							this.Recordar.clase = "is-invalid";
							this.Recordar.mjs = "Verifique la Hora de Inicio";
						} else {
							//CORRECTO
							this.Recordar.clase = "";
							this.Recordar.mjs = "";
							this.correcto = true;
						}
					} else {
						this.Recordar.clase = "is-invalid";
						this.Recordar.mjs = "Ingrese una cantidad positiva";
					}
					//------------
				} else {
					this.Recordar.clase = "is-invalid";
					this.Recordar.mjs = "Ingrese una Fecha del evento";
				}
			}
		},
		//Agregar Tarea
		/*
		<h4>Valor - {{Horai.valor}}</h4>
                                <h4>Clase - {{Horai.clase}}</h4>
                                <h4>min - {{Horai.min}}</h4>
                                <h4>max - {{Horai.max}}</h4>
                                <h4>mjs - {{Horai.mjs}}</h4>
		<h4>Valor - {{HoraF.valor}}</h4>
                                <h4>Clase - {{HoraF.clase}}</h4>
                                <h4>Ver - {{HoraF.editar}}</h4>
                                <h4>min - {{HoraF.min}}</h4>
                                <h4>max - {{HoraF.max}}</h4>
                                <h4>mjs - {{HoraF.mjs}}</h4>
		<h6>tipo {{Recordar.tipo}}</h6>
                                <h6>dado {{Recordar.dado}}</h6>
		<h4>Valor - {{Recordar.valor}}</h4>
                            <h4>Clase - {{Recordar.clase}}</h4>
                            <h4>Ver - {{Recordar.ver}}</h4>
                            <h4>tipo - {{Recordar.tipo}}</h4>
                            <h4>C1 - {{Recordar.c1}}</h4>
		*/
		addTarea() {
			this.validar();
			if (this.correcto) {
				var formdata = new FormData();
				formdata.append("nombre", this.Tarea.valor);
				formdata.append("fecha", this.Fechai.valor);
				formdata.append("horai", this.Horai.valor);

				formdata.append("horafG", this.HoraF.editar);
				if (!this.HoraF.editar) {
					formdata.append("horaf", this.HoraF.valor);
				}
				formdata.append("tipo", this.Recordar.tipo);
				formdata.append("recordarG", this.Recordar.ver);
				if (!this.Recordar.ver) {
					formdata.append("recordar", this.Recordar.valor);
				}

				//
				formdata.append("matter", this.Matter);
				axios
					.post(
						"http://localhost/Calendario/index.php/calendario/probar",
						formdata
					)
					.then(response => {
						this.rutas("Tarea Agregada");
						console.log(response.data);
						/*
						start: "2019-10-24 11:30",
			end: "2019-10-24 12:30",
			title: "Salir",
			content: '<i class="v-icon material-icons">shopping_cart</i>',
			class: "leisure"
						 */

						inicio = response.data.fechaEvento;
						fin = response.data.fechaFinEvento;
						titulo = response.data.nombreEvento;
						if (response.data.tipoRecordatorio == "1") {
							tipo = "danger";
						} else if (response.data.tipoRecordatorio == "2") {
							tipo = "warning";
						} else {
							tipo = "primary";
						}

						calendario.events.push({
							start: inicio,
							end: fin,
							title: titulo,
							class: tipo
						});
						this.limpiar();
					})
					.catch(error => {
						console.log(error.response);
						console.log(error.response.data);
						if (error.response.status == 400) {
							error.response.data.forEach(element => {
								switch (element.campo) {
									case 1:
										this.Tarea.clase = "is-invalid";
										this.Tarea.mjs = "Nombre debe ser de 5 a 25 caracteres";
										break;
									case 2:
										this.Fechai.clase = "is-invalid";
										this.Fechai.mjs =
											"La Fecha inicial deber ser mayor o igual a la actual";
										break;
									case 3:
										this.Horai.clase = "is-invalid";
										this.Horai.mjs =
											"La Hora inicial debe ser mayor a la actual";
										break;
									case 4:
										this.HoraF.clase = "is-invalid";
										this.HoraF.mjs =
											"La Hora final debe ser mayor a la Hora inicial";
										break;
									case 5:
										this.Recordar.clase = "is-invalid";
										this.Recordar.mjs =
											"El recordatorio debe ser mayor a la fecha actual (Verifique Hora o Dia)";
										break;
									case 6:
										this.Recordar.clase = "is-invalid";
										this.Recordar.mjs =
											"Modifique primero la Fecha y/o Hora inicial";
										break;
										//Eventos misma hora
									case 7:
										$("#exampleModal").modal("show");
										console.log("--> " + this.Matter);
										break;
								}
							});
						}
					});
			} else {
				alert("Datos mal Ingresados");
			}
			console.log("click");
		},
		//Fin Agregar Tarea
		MattrF() {
			console.log("no import");
			this.Matter = true;
			this.addTarea();
			$("#exampleModal").modal("hide");
		},
		// fin de mattrf
		// rutas
		rutas(texto) {
			Vue.use(Toasted);
			let myToast = Vue.toasted.show(texto, {
				// pass the icon name as string
				icon: "check_circle",
				type: "info",
				theme: "outline",
				duration: 5000
			});
			myToast.goAway(3000);
			/*Vue.use(Toasted);
			let toast = Vue.toasted.show("Toasted !!", {
				theme: "toasted-primary",
				position: "top-right",
				duration: 5000
			});*/

		},
		//fin de rutas
		// LIMPIAR
		limpiar() {
			this.Tarea.valor = "";
			this.Tarea.clase = "";
			this.Tarea.mjs = "";

			this.Fechai.valor = "";
			this.Fechai.clase = "";
			this.Fechai.mjs = "";

			this.Horai.valor = "";
			this.Horai.clase = "";
			this.Horai.min = "00:00";
			this.Horai.max = "23.58";
			this.Horai.mjs = "";

			this.HoraF.valor = "";
			this.HoraF.clase = "";
			this.HoraF.editar = true;
			this.HoraF.min = "";
			this.HoraF.max = "23.59";

			this.Recordar.valor = 1;
			this.Recordar.clase = "";
			this.Recordar.tipo = 3;
			this.Recordar.ver = true;
			this.Recordar.c1 = false;
			this.Recordar.dado = 3;
			this.Recordar.mjs = "";

			this.addT = "AÃ±adir";
			this.correcto = false;
			this.Matter = false;
		}
		//fin de limpiar
	}
});



-------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------

 public function probar()
    {
        date_default_timezone_set('America/El_Salvador');
        $nombreEvento = $this->input->post('nombre');
        $fechaEvento = $this->input->post('fecha');
        $horaEvento = $this->input->post('horai');
        $tipoRecuerdo = $this->input->post('tipo');
        $horaFinal = null;
        $estado3 = $this->input->post('horafG');
        if ($estado3 == 'false') {
            $horaFinal = $this->input->post('horaf');
        }
        $cantidadRestar = null;
        $estado2 = $this->input->post('recordarG');
        if ($estado2 == 'false') {
            $cantidadRestar = $this->input->post('recordar');
        }
        $importa= $this->input->post('matter');
        if ($importa == "false") {
            # code...
            $importa2 = false;
        } else {
            # code...
            $importa2 = true;
        }
        
        #
        #        VALIDACIONES
        #
        $datosCorrectos = 0;
        //Validando nombre del evento
        if (strlen($nombreEvento) > 4 && strlen($nombreEvento) < 26) {
        } else {
            $datosCorrectos++;
            $datos[] = array('campo' => 1);
        }

        $fechaActual = date("Y-m-d", time());
        $horaActual = date("H:i", time());

        $fechaActualTotal = $fechaActual . " " . $horaActual;
        $fechaInicioEvento = $fechaEvento . " " . $horaEvento;
        $fechaFinEvento = null;

        //Validando solo fecha del evento
        if (strtotime($fechaEvento) >= strtotime($fechaActual)) {
        } else {
            $datosCorrectos++;
            $datos[] = array('campo' => 2);
        }
        
        //validar hora inicial del evento si es igual a la fecha actual
        if (strtotime($fechaEvento) == strtotime($fechaActual)) {
            //si entra
            if (strtotime($horaEvento) > strtotime($horaActual)) {
            } else {
                $datosCorrectos++;
                $datos[] = array('campo' => 3);
            }
        }
        //validar hora final del evento
        if ($horaFinal != null) {
            if (strtotime($horaFinal) > strtotime($horaEvento)) {
                $fechaFinEvento = $fechaEvento . " " . $horaFinal;
            } else {
                $datosCorrectos++;
                $datos[] = array('campo' => 4);
            }
        }
        //quedara null si no hay recordatorio es decir  == 3
        $fechaRecuerdo = null;
        //validar recordatorio si es 1 o 2
        if ($cantidadRestar != null) {
            //ver primero que la fecha inicio del evento sea mayor a la fecha actual
            if (strtotime($fechaInicioEvento) >= strtotime($fechaActualTotal)) {
                if ($tipoRecuerdo == "1") {
                    # Dias...
                    $restar = "-" . $cantidadRestar . " days";
                } else {
                    # horas...
                    $restar = "-" . $cantidadRestar . " hours";
                }
                // ver que la fecha+hora recuerdo sea mayor a la fecha+hroa actual para poder recordar
                $fechaRecuerdoValidar = strtotime($restar, strtotime($fechaInicioEvento));
                $fechaActualValidar = strtotime($fechaActualTotal);
                if ($fechaRecuerdoValidar > $fechaActualValidar) {
                    $fechaRecuerdo = date("Y-m-d H:i:s", $fechaRecuerdoValidar);
                } else {
                    $datosCorrectos++;
                    $datos[] = array('campo' => 5);
                }
            } else {
                $datosCorrectos++;
                $datos[] = array('campo' => 6); //el mismo 5
            }

        }
        if (true) {
            # code...
            if (!$importa2) {
                # code...
                $datosCorrectos++;
                $datos[] = array('campo' => 7);
            }
        }
        

        if ($datosCorrectos==0) {
            #
            # tdodo bien...   Datos que se envian a la base
            #
            //$fechaInicioEvento = date("d-m-Y H:i:s", strtotime($fechaInicioEvento));
            if ($horaFinal!=null) {
                //$fechaFinEvento = date("d-m-Y H:i:s", strtotime($fechaFinEvento));
            }
            $data = array(
                'nombreEvento' => $nombreEvento,
                'fechaEvento' => $fechaInicioEvento,
                'fechaFinEvento' => $fechaFinEvento,
                'fechaRecordatorio' => $fechaRecuerdo,
                'tipoRecordatorio' => $tipoRecuerdo,
                'estado' => 1,
            );
            //$this->calendario_model->agregar($data);
            #
            # tdodo bien...   Datos que se envian a la vista
            #
            $fechaInicioEvento = date("Y-m-d H:i:s", strtotime($fechaInicioEvento));
            
            if ($horaFinal == null) {
                $fechaFinEvento = strtotime('+1 hours',strtotime($fechaInicioEvento));
                $fechaFinEvento = date("Y-m-d H:i:s", $fechaFinEvento);
            }else{
                $fechaFinEvento = date("Y-m-d H:i:s", strtotime($fechaFinEvento));
            }
            if ($cantidadRestar!= null) {
                //$fechaRecuerdo = date("Y-m-d H:i:s", strtotime($fechaRecuerdo));
            }

            $data = array(
                'nombreEvento' => $nombreEvento,
                'fechaEvento' => $fechaInicioEvento,
                'fechaFinEvento' => $fechaFinEvento,
                'fechaRecordatorio' => $fechaRecuerdo,
                'tipoRecordatorio' => $tipoRecuerdo,
                'estado' => 1,
            );
            $this->output->set_status_header(200)->set_content_type('application/json')->set_output(json_encode($data));
        } else {
            # algo mal...
            $this->output->set_status_header(400)->set_content_type('application/json')->set_output(json_encode($datos));
        }

    }
******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 <!-- inputs de entradas -->
                    <div class="card-body" id="entrada">
                        <div>
                            <!--Nombre Tarea-->
                            <div class="form-group">
                                <label for="">Nombrea Tarea</label>
                                <input type="text" v-model="Tarea.valor" class="form-control" :class="[Tarea.clase]"
                                    placeholder="Nombre Tarea">
                                <span v-show="Tarea.clase" class="text-danger"><b>Campo Requerido
                                    </b>{{Tarea.mjs}}</span>
                            </div>
                            <!--Fecha Tarea-->

                            <div class="form-group">
                                <label for="">Fecha evento</label>
                                <input type="date" v-model="Fechai.valor" class="form-control" :class="[Fechai.clase]">
                                <span v-show="Fechai.clase" class="text-danger"><b>Campo Requerido
                                    </b>{{Fechai.mjs}}</span>
                            </div>
                            <!--Hora inicial-->
                            <div class="form-group">
                                <label for="">Hora inicial</label>
                                <input type="time" v-model="Horai.valor" class="form-control" :class="[Horai.clase]"
                                    step="600">
                                <span v-show="Horai.clase" class="text-danger"><b>Campo Requerido</b>
                                    {{Horai.mjs}}</span>
                            </div>
                            <!-- hora final -->
                            <div class="form-group">
                                <label><input v-on:click="verHoraF" type="checkbox" :checked="!HoraF.editar">Hora
                                    final</label>
                                <input type="time" v-model="HoraF.valor" class="form-control" :class="[HoraF.clase]"
                                    :readonly="HoraF.editar" step="600">
                                <span v-show="HoraF.clase" class="text-danger"><b>Campo Requerido </b>{{HoraF.mjs}}
                                </span>
                            </div>

                            <!-- recordar -->
                            <div class="form-group">
                                <label><input v-on:click="verRecordar" type="checkbox" :checked="!Recordar.ver">Â¿
                                    Recordar
                                    ?</label>
                            </div>
                            <div :class="['form-group', Recordar.ver ? 'clase' : '']">
                                <!-- Opcion DIAS o HORAS -->
                                <div class="d-flex justify-content-around">
                                    <div>
                                        <input type="radio" id="horas" name="recordar" value="horas"
                                            v-on:click="tipoRecordar('2')" :checked="Recordar.c1">
                                        <label for="horas">Horas</label>
                                    </div>
                                    <div>
                                        <input type="radio" id="dias" name="recordar" value="dias"
                                            v-on:click="tipoRecordar('1')">
                                        <label for="dias">Dias</label>
                                    </div>
                                </div>
                                <!-- FIN Opcion DIAS o HORAS -->
                                <div class="form-group">
                                    <label for="tiempo"><b>Tiempo de anticipacion</b></label>
                                    <input type="number" v-model="Recordar.valor" class="form-control" min="0"
                                        :class="[Recordar.clase]">
                                    <span v-show="Recordar.clase" class="text-danger"><b>Campo Requerido
                                        </b>{{Recordar.mjs}}
                                </div>
                            </div>

                            <!-- fin recordar -->

                            <div class="form-group">

                                <input type="submit" v-model="addT" value="enviar" v-on:click="addTarea"
                                    :class="['form-control', 'btn', (Recordar.tipo == 3) ? 'btn-primary': (Recordar.tipo == 2) ? 'btn-warning': 'btn-danger']">
                            </div>
                        </div>
                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                            Launch demo modal
                        </button>
                        <h3>{{Tarea.valor}}</h3>

                        <input type="submit" value="Hola" v-on:click="rutas('Hola !!')" class="btn btn-success">
                        <!-- Modal Mismo dia -->
                        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"
                            aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header bg-danger text-white">
                                        <h5 class="modal-title" id="exampleModalLabel">Advetencia !!!</h5>
                                        <button type="button" class="close text-white" data-dismiss="modal"
                                            aria-label="Close">
                                            <span aria-hidden="true">X</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        La hora del recordatorio coincide con otro recordatorio que ya se encuentra
                                        agendado <br>
                                        Si aun asi desea agregarlo de click en <b>AÃ±adir de todas formas</b>. Sino de
                                        click en <b>Cancelar</b>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-primary" v-on:click="MattrF">AÃ±adir
                                            de todas
                                            formas</button>
                                        <button type="button" class="btn btn-secondary"
                                            data-dismiss="modal" v-on:click="limpiar">Cancelar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Modal Mismo dia-->
                    </div>
                    <!-- /.card-body -->
                </div>


            </div>
            <!-- Modal Editar -->
            <div class="modal fade" id="modalEditar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header bg-success text-white">
                            <h5 class="modal-title" id="exampleModalLabel">Evento: </h5>
                            <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">X</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            La hora del recordatorio coincide con otro recordatorio que ya se encuentra
                            agendado <br>
                            Si aun asi desea agregarlo de click en <b>AÃ±adir de todas formas</b>. Sino de
                            click en <b>Cancelar</b>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" v-on:click="MattrF">AÃ±adir
                                de todas
                                formas</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal Editar-->

******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************











