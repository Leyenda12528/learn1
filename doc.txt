 REGISTRARSE en PC

git config --global user.name "<nombre para identificarse>"
git config --global user.email "<un correo>"
git config --global --list  --> ver nuestros datos

VER datos
git config --global --list


LIMPIAR PANTALLA
	clear
INICIAR REPOSITORIO LOCAL GIT
	git init

BAJAR REPOSITORIO de GITHUB  al directorio actual (Ejemplo)
	cd Desktop
	git clone <url>  --> automaticamente crea una carpeta con el nombre del repositorio


HACEN CAMBIOS en el archivo
GUARDARLOS 
	git add .   O git add -A  --> los dos hacen lo mismo
	git commit -m "<comentario>"

VER ESTADO DEL TRABAJO
	git status

VER LOS COMMITS REALIZADOS
	git log --> para salir de la vista ingresar ":q"
	git lod --> ver los commits solo nombres

SUBIR REPOSITORIO LOCAL A GITHUB REPOSITORIO REMOTO
	git remote add origin <url>
	git push -u origin master

SUBIR CAMBIOS A GITHUB 
	git push origin master --> si da error primero BAJAR CAMBIOS / ACTUALIZAR


BAJAR CAMBIOS HECHOS POR OTRA PERSONA / ACTUALIZAR
	git fetch origin
	git merge origin/master   --> para salir de la vista ingresar ":q"



REGRESAR AL COMMIT ANTERIOR
	git reset --hard HEAD~1 --> Borrar los commits posteriores -->alt+4(numeral de arriba)=~ 
	git reset --soft HEAD~1 --> Regresa un commit anterior pero los commits posteriores siguen 
				    en la rama intactos y aparacen como listos para hacer commit


**********************************************************************
**********************************************************************
**********************************************************************
RAMAS
ver las ramas exitentes
	git branch
	git branch --all --> ver todas las ramas incluso ocultas

	git branch -r --> solo ramas remotas
	git branch -a --> todas las ramas
	git branch -vv --> todas ramas asociadas
	git fetch origin nombreramaRemota:Ramalocal --> baja la rama remota con sus cambios y los copia a una rama local no asociada

crear nueva rama y despues moverse
	git branch <nombre nueva rama>     --> crear una rama nueva
	git checkout <nombre nueva rama>   --> moverse a la nueva rama

crear nueva rama(rama2)  y moverse de un solo
	git chechout -b <name new branch>


**************************SIRVE para hacer prueba en el proyecto y posteriormente subirlos a GITHUB
----se hacen cambios en nueva rama(rama2)
	git add.
	git commit -m "comentario"


Los cambios que se hagan en la nueva rama (rama2) no afectan a las otras ramas (master)
Si los cambios hechos son sastifactorios moverlos a la rama(master) para subirlos despues
Sino seguir modificando o borrar la nueva rama (rama2)



Mover los cambios de la nueva rama(rama2) a otra rama (master)

Moverse primero a la otra rama (master) que va a absorber a "rama2"  y despues mover los cambios
	git checkout master
	git merge rama2     

--> ahora rama "master" tiene los cambios de la "rama2"
--> y posteriormente subirlos a GITHUB 
	
	
****BORRAR RAMA
	git checkout master    				--> moverse a la rama principal
	git branch -D <nombre de la rama a eliminar>	--> borrar la rama nueva

******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 BORRAR CREDENCIALES DE CONSOLA	
	https://codeday.me/es/qa/20190414/495405.html
git credential-manager delete https://github.com

******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************

var calendario = new Vue({
	components: {
		vueCal: vuecal
	},
	el: "#app",
	data: {
		events: [
			{
				start: "2019-10-16 10:30",
				end: "2019-10-16 11:30",
				title: "Need to go shopping",
				content: '<i class="v-icon material-icons">shopping_cart</i>',
				class: "leisure"
			}
		]
	}
});

var entrada = new Vue({
	el: "#entrada",
	data: {
		dado: 0,
		tarea: "",
		fechai: "",
		horai: "",

		horaF: [
			{
				valor: "",
				read: true,
				min: ""
			}
		],

		recordar: [
			{
				valor: 1,
				read: true,
				tipo: "0",
				readValor: true
			}
		],
		addT: "Añadir"
	},
	methods: {
		verHoraF() {
			if (this.horaF[0].read) {
				this.horaF[0].read = false;
				this.horaF[0].min = this.horai;
			} else {
				this.horaF[0].read = true;
				this.horaF[0].min = "";
				this.horaF[0].valor = "";
			}
		},
		verRecordar() {
			if (this.recordar[0].read) {
				this.recordar[0].read = false;
				this.recordar[0].tipo = this.dado;
			} else {
				this.recordar[0].tipo = 0;
				this.recordar[0].read = true;
			}
		},
		tipoRecordar(tipo) {
			this.dado = tipo;
			this.recordar[0].tipo = this.dado;
			this.recordar[0].readValor = false;
		},
		//Agregar Tarea
		addTarea() {
			console.log("click");
			var formdata = new FormData();
			formdata.append("nombre", this.tarea);
			formdata.append("fecha", this.fechai);
			axios
				.post("http://localhost/Calendario/index.php/calendario/save", formdata)
				.then(response => {
					console.log(response.data);
				});
		}
	}
});


    public function save()
    {
        $data = array(
            'nombre' => $this->input->post('nombre'),
            'fecha' => $this->input->post('fecha'),
        );
        //echo $this->input->post('fecha');
        $datos = json_encode($data);
        echo $datos;
    }

******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
<div class="card-body" id="entrada">
                        <div>
                            <div class="form-group">
                                <input type="text" v-model="tarea" name="" id="" class="form-control"
                                    placeholder="Nombre Tarea" required>
                            </div>

                            <div class="form-group">
                                <label for="">Fecha evento</label>
                                <input type="date" v-model="fechai" name="" id="" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="">Hora inicial</label>
                                <input type="time" v-model="horai" name="hi" id="hi" class="form-control" min="06:00"
                                    max="17:30" step="600" required>

                                <h2>{{horai}}</h2>
                            </div>
                            <!-- hora final -->
                            <div class="form-group">
                                <label><input v-on:click="verHoraF" type="checkbox" name="" id="">Hora final</label>
                                <input type="time" v-model="horaF[0].valor" name="dd" id="dd" class="form-control"
                                    :readonly="horaF[0].read" :min="horaF[0].min" max="18:00"
                                    :required="!horaF[0].read">
                            </div>

                            <!-- recordar -->
                            <div class="form-group">
                                <label><input v-on:click="verRecordar" type="checkbox" name="" id="">¿ Recordar
                                    ?</label>
                            </div>
                            <div :class="['form-group', recordar[0].read ? 'clase' : '']">
                                <!-- Opcion DIAS o HORAS -->
                                <div class="d-flex justify-content-around">
                                    <div>
                                        <input type="radio" id="dias" name="recordar" value="dias"
                                            v-on:click="tipoRecordar('1')">
                                        <label for="dias">Dias</label>
                                    </div>
                                    <div>
                                        <input type="radio" id="horas" name="recordar" value="horas"
                                            v-on:click="tipoRecordar('2')">
                                        <label for="horas">Horas</label>
                                    </div>
                                </div>
                                <!-- FIN Opcion DIAS o HORAS -->
                                <div class="form-group">
                                    <label for="tiempo"><b>Tiempo de anticipacion</b></label>
                                    <input type="number" v-model="recordar[0].valor" name="" id="tiempo"
                                        class="form-control" min="1" :readonly="recordar[0].readValor"
                                        :required="!recordar[0].read">
                                </div>
                            </div>
                            <!-- fin recordar -->
                            <div class="form-group">
                                <h6>tipo {{recordar[0].tipo}}</h6>
                                <h6>dado {{dado}}</h6>
                                <input type="submit" v-model="addT" value="enviar" v-on:click="addTarea"
                                    :class="['form-control', 'btn', (recordar[0].tipo == 0) ? 'btn-primary': (recordar[0].tipo == 1) ? 'btn-success': 'btn-danger']">
                            </div>
                        </div>

                    </div>


******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************







